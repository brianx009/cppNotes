#include<iostream>
#include<string>

using std::cout;
using std::endl;


void updateRevenue(double* revenuePtr, double* anotherRevenuePtr);     //signature that takes in a pointer

int main(){

  double brianStoreRevenue = 100.00;     //creating a variable
  double brianStoreTwoRevenue = 200.00;     //creating a variable

  double* revenuePtr = &brianStoreRevenue;     //creating a pointer that points the memory address of our original varibale

  cout << "brianStoreRevenue before updateRevenue: " << brianStoreRevenue << endl;     //prints out the value of our orignal variable
  cout << "brianStoreRevenue address before updateRevenue: " << revenuePtr << endl;

  updateRevenue(revenuePtr, &brianStoreTwoRevenue);     //function call on our pointer

  cout << "brianStoreRevenue after updateRevenue: " << brianStoreRevenue << endl;     //prints out the updated value of our original variable

  cout << "revenuePtr address after updateRevenue: " << revenuePtr << endl;
    
  return 0;
}

void updateRevenue(double* revenuePtr, double* anotherRevenuePtr){
  cout << "Inside of updateRevenue" << endl;
  
  revenuePtr = anotherRevenuePtr;    //last example we had a *revenuePtr, but now we have revenuePtr, are the changes that we make here inside of this function going to change the contents of what is inside of our main funciton? -- the answer is no because we are still passing by value and not ny reference.
  
}

